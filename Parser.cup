//import section

parser code{:
    public static void main(String[]args){
        try {
            FileReader file = new FileReader(args[0]);
            Scanner scanner = new Lexer(file);
            Parser parser = new Parser(scanner);
        } catch(Exception e) {
            System.out.println(e);
        }
    }
:};

//Terminal symbols
terminal MAIN, LBR, RBR, LCURLY, RCURLY, COLON, INT, CHAR, REAL, BOOL, REPEAT, UNTIL, EQUALS, SEMICOLON;
terminal READ, WRITE, OR, AND, RELLT, RELLTEQ, RELEQ, RELNEQ, RELGT, RELGTEQ, PLUS, MINUS, MUL, DIV, COMMA;
terminal INTEGER, BOOLEAN, CHARACTER, DOUBLE, ID, CONST;

//Nonterminal symbols
non terminal Program, Block, VarList, StatementList, VarDecl, NameList, Type, Statement, Expression;
non terminal AndExpression, RelExpression, ArExpression, RelOp, Term, Factor, ExpressionList;

//Grammar
Program::=MAIN LBR RBR Block
{:
    System.out.println("Redukcija po smeni 1");
:};

Block::=LCURLY VarList StatementList RCURLY
{:
    System.out.println("Redukcija po smeni 2");
:};

VarList::=VarList VarDecl
{:
    System.out.println("Redukcija po smeni 3");
:}
|VarDecl
{:
    System.out.println("Redukcija po smeni 4");
:};

VarDecl::=NameList COLON Type SEMICOLON
{:
    System.out.println("Redukcija po smeni 5");
:};

NameList::=NameList COMMA ID
{:
    System.out.println("Redukcija po smeni 6");
:}
|ID
{:
    System.out.println("Redukcija po smeni 7");
:};

Type::=INT
{:
    System.out.println("Redukcija po smeni 8");
:}
|CHAR
{:
    System.out.println("Redukcija po smeni 9");
:}
|REAL
{:
    System.out.println("Redukcija po smeni 10");
:}
|BOOL
{:
    System.out.println("Redukcija po smeni 11");
:};

StatementList::=StatementList Statement
{:
    System.out.println("Redukcija po smeni 12");
:}
|Statement
{:
    System.out.println("Redukcija po smeni 13");
:};

Statement::=REPEAT StatementList UNTIL Expression SEMICOLON
{:
    System.out.println("Redukcija po smeni 14");
:}
|ID EQUALS Expression SEMICOLON
{:
    System.out.println("Redukcija po smeni 15");
:}
|READ LBR NameList RBR SEMICOLON
{:
    System.out.println("Redukcija po smeni 16");
:}
|WRITE LBR ExpressionList RBR SEMICOLON
{:
    System.out.println("Redukcija po smeni 17");
:}
|Block
{:
    System.out.println("Redukcija po smeni 18");
:};

Expression::=Expression OR AndExpression
{:
    System.out.println("Redukcija po smeni 19");
:}
|AndExpression
{:
    System.out.println("Redukcija po smeni 20");
:};

AndExpression::=AndExpression AND RelExpression
{:
    System.out.println("Redukcija po smeni 21");
:}
|RelExpression
{:
    System.out.println("Redukcija po smeni 22");
:};

RelExpression::=ArExpression RelOp ArExpression
{:
    System.out.println("Redukcija po smeni 23");
:}
|ArExpression
{:
    System.out.println("Redukcija po smeni 24");
:};

RelOp::=RELLT
{:
    System.out.println("Redukcija po smeni 25");
:}
|RELLTEQ
{:
    System.out.println("Redukcija po smeni 26");
:}
|RELEQ
{:
    System.out.println("Redukcija po smeni 27");
:}
|RELNEQ
{:
    System.out.println("Redukcija po smeni 28");
:}
|RELGT
{:
    System.out.println("Redukcija po smeni 29");
:}
|RELGTEQ
{:
    System.out.println("Redukcija po smeni 30");
:};

ArExpression::=ArExpression PLUS Term
{:
    System.out.println("Redukcija po smeni 31");
:}
|ArExpression MINUS Term
{:
    System.out.println("Redukcija po smeni 32");
:}
|Term
{:
    System.out.println("Redukcija po smeni 33");
:};

Term::=Term MUL Factor
{:
    System.out.println("Redukcija po smeni 34");
:}
|Term DIV Factor
{:
    System.out.println("Redukcija po smeni 35");
:}
|Factor
{:
    System.out.println("Redukcija po smeni 36");
:};

Factor::=ID
{:
    System.out.println("Redukcija po smeni 37");
:}
|CONST
{:
    System.out.println("Redukcija po smeni 38");
:}
|LBR Expression RBR
{:
    System.out.println("Redukcija po smeni 39");
:};

ExpressionList::=ExpressionList COMMA Expression
{:
    System.out.println("Redukcija po smeni 40");
:}
|Expression
{:
    System.out.println("Redukcija po smeni 41");
:};